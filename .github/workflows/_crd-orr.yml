# .github/workflows/_crd-orr.yml
name: _CRD ORR (Reusable)
on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: false
      run_bundle:
        type: boolean
        required: false
        default: true
      profile:
        type: string
        required: false
        default: fast
      environment:
        type: string
        required: false
        default: dev
      epic_path:
        type: string
        required: false
        default: docs/obs/CRD-8-epic.md
      agents_md:
        type: string
        required: false
        default: AGENTS.md
      project_dir:
        type: string
        required: false
        default: .
      project_repo:
        type: string
        required: false
        default: ""
      project_ref:
        type: string
        required: false
        default: ""
permissions:
  contents: read
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout caller repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.sha }}
          fetch-depth: 0
          submodules: recursive

      - name: Checkout scripts repo (optional)
        if: ${{ inputs.project_repo != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.project_repo }}
          ref: ${{ inputs.project_ref || 'main' }}
          path: _project
          fetch-depth: 0
          submodules: recursive

      - name: Locate project dir
        id: locate
        shell: bash
        run: |
          set -euo pipefail
          base="."
          if [ -n "${{ inputs.project_repo }}" ]; then base="_project"; fi
          dir="$base/${{ inputs.project_dir }}"
          if [ ! -d "$dir" ]; then
            echo "::error::project_dir não existe: $dir"
            exit 1
          fi
          if [ ! -f "$dir/scripts/orr_env_probe.sh" ]; then
            map="$(cd "$dir" && git ls-files '*/scripts/orr_env_probe.sh' | head -n1 || true)"
            if [ -n "$map" ]; then dir="$dir/$(dirname "$(dirname "$map")")"; fi
          fi
          if [ ! -f "$dir/scripts/orr_env_probe.sh" ]; then
            echo "::error::scripts/orr_env_probe.sh não encontrado em $dir"
            exit 1
          fi
          echo "dir=$dir" >> "$GITHUB_OUTPUT"

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Preflight
        shell: bash
        working-directory: ${{ steps.locate.outputs.dir }}
        run: |
          set -euo pipefail
          for f in scripts/orr_env_probe.sh scripts/orr_t1_run.sh scripts/orr_t3_props_run.sh scripts/orr_t4_goldens_run.sh scripts/orr_t5_bench_run.sh scripts/orr_t6_metrics_run.sh scripts/orr_t7_ci_prep.sh scripts/orr_t7_collect_ci.sh; do
            [ -x "$f" ] || { echo "::error file=$f::missing or not executable"; exit 1; }
          done
          [ -f scripts/orr_t2_parse_unit.py ] || { echo "::error file=scripts/orr_t2_parse_unit.py::missing"; exit 1; }
          [ "${{ inputs.run_bundle && '1' || '0' }}" = "0" ] || [ -x scripts/orr_t8_bundle.sh ] || { echo "::error file=scripts/orr_t8_bundle.sh::missing"; exit 1; }

      - name: Run ORR
        shell: bash
        working-directory: ${{ steps.locate.outputs.dir }}
        env:
          RUN_BUNDLE: ${{ inputs.run_bundle && '1' || '0' }}
          PROFILE: ${{ inputs.profile }}
          TARGET_ENV: ${{ inputs.environment }}
          EPIC_PATH: ${{ inputs.epic_path }}
          AGENTS_MD: ${{ inputs.agents_md }}
        run: |
          set -euo pipefail
          scripts/orr_env_probe.sh "$@"
          scripts/orr_t1_run.sh "$@"
          python3 scripts/orr_t2_parse_unit.py "$@"
          scripts/orr_t3_props_run.sh "$@"
          scripts/orr_t4_goldens_run.sh "$@"
          scripts/orr_t5_bench_run.sh "$@"
          python3 scripts/orr_t5_collect_criterion.py "$@"
          scripts/orr_t6_metrics_run.sh "$@"
          scripts/orr_t7_ci_prep.sh "$@"
          scripts/orr_t7_collect_ci.sh "$@"
          if [ "${RUN_BUNDLE}" = "1" ]; then
            scripts/orr_t8_bundle.sh "$@"
          fi
