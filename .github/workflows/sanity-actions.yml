name: Sanity — Actions Pins
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch: {}
permissions:
  contents: read
jobs:
  verify:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Resolve & Verify Pins
        shell: bash
        run: |
          set -euo pipefail
          cat > .github/verify_pins.py <<'PY'
import re,sys,os
pat_inline=re.compile(r'^\s*uses:\s*(['"\']?)([A-Za-z0-9_.-]+/[A-Za-z0-9_.-]+)@([^"'\s#]+)\1\s*$')
pat_key=re.compile(r'^\s*uses:\s*$')
pat_val=re.compile(r'^\s*(['"\']?)([A-Za-z0-9_.-]+/[A-Za-z0-9_.-]+)@([^"'\s#]+)\1\s*$')
files=[]
for d,_,fs in os.walk('.github'):
  for f in fs:
    if f.endswith(('.yml','.yaml')): files.append(os.path.join(d,f))
files.sort()
for f in files:
  with open(f,'r',encoding='utf-8',errors='ignore') as h: L=h.readlines()
  i=0
  while i<len(L):
    ln=L[i]
    m=pat_inline.match(ln)
    if m:
      q,a,r=m.groups()
      if not (a.startswith('./') or a.startswith('docker://')):
        print(f"{f}\t{a}\t{r}")
      i+=1; continue
    if pat_key.match(ln) and i+1<len(L):
      v=L[i+1]; m2=pat_val.match(v)
      if m2:
        q,a,r=m2.groups()
        if not (a.startswith('./') or a.startswith('docker://')):
          print(f"{f}\t{a}\t{r}")
        i+=2; continue
    i+=1
PY
          python .github/verify_pins.py > .pins
          : > .summary || true
          FAIL=0
          while IFS=$'\t' read -r file action ref; do
            if ! [[ "$ref" =~ ^[0-9a-fA-F]{40}$ ]]; then echo "NO-SHA: $file $action@$ref" >> .summary; FAIL=1; continue; fi
            code=$(curl -s -o /dev/null -w "%{http_code}" "https://api.github.com/repos/${action}/commits/${ref}")
            if [ "$code" != "200" ]; then echo "NO-COMMIT: $file $action@$ref ($code)" >> .summary; FAIL=1; fi
          done < .pins
          {
            echo "### Sanity Pins — $(date -u +%F)"
            if [ -s .summary ]; then echo; echo "**Issues:**"; sed -E 's/^/- /' .summary; else echo; echo "Tudo OK: todos os `uses` possuem SHA(40) válido."; fi
          } >> "$GITHUB_STEP_SUMMARY"
          exit $FAIL
