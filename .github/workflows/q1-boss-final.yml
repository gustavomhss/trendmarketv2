name: Q1 Boss Final

on:
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:
    inputs:
      release_tag:
        description: Optional release tag to annotate the report
        required: false
        type: string
  pull_request:
    paths:
      - '.github/workflows/q1-boss-final.yml'
      - 'scripts/boss_final/**'
      - 'schemas/q1_boss_report.schema.json'
      - 'scripts/scorecards/**'
      - 's6_validation/**'
      - 'dashboards/grafana/scorecards_quorum_failover_staleness.json'
      - 'scripts/scorecards/**'
      - 'schemas/**'
      - 's6_validation/**'
      - 'dashboards/grafana/scorecards_quorum_failover_staleness.json'
      - 'docs/scorecards/**'
      - 'Makefile'
      - 'tests/**'
      - 'actions.lock'

concurrency:
  group: q1-boss-final-${{ github.ref }}
  cancel-in-progress: true

env:
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  PYTHONHASHSEED: '0'
  PYTHONUTF8: '1'
  HYPOTHESIS_PROFILE: ci
  HYPOTHESIS_SEED: '12345'

jobs:
  stage:
    name: Stage ${{ matrix.stage }} (clean=${{ matrix.clean_runner }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        stage: [s1, s2, s3, s4, s5, s6]
        clean_runner: [false, true]
    env:
      STAGE: ${{ matrix.stage }}
      CLEAN_RUNNER: ${{ matrix.clean_runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install Python 3.11
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get update
          sudo apt-get install -y python3.11 python3.11-venv python3.11-distutils python3.11-dev
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 400
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.11 400
          sudo update-alternatives --set python3 /usr/bin/python3.11
          sudo update-alternatives --set python /usr/bin/python3.11
          python -m ensurepip --upgrade

      - name: Upgrade packaging toolchain
        timeout-minutes: 5
        run: python -m pip install --upgrade pip==24.2 setuptools==75.1.0 wheel==0.44.0

      - name: Install Python dependencies
        timeout-minutes: 5
        run: |
          set -euo pipefail
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.lock -c constraints-app.txt
          python -m pip check

      - name: Configure stage artifact directory
        run: |
          echo "STAGE_ARTIFACT_DIR=$RUNNER_TEMP/boss-stage-${STAGE}" >> "$GITHUB_ENV"
          echo "ARTIFACT_DIR=$RUNNER_TEMP/boss-stage-${STAGE}" >> "$GITHUB_ENV"

      - name: Ensure clean workspace
        if: ${{ matrix.clean_runner }}
        run: |
          rm -rf "$HOME/.cache/pip"
          rm -rf "$HOME/.cache/pytest"

      - name: Execute sprint guard
        timeout-minutes: 5
        run: bash scripts/boss_final/ci_stage_wrapper.sh
      - name: Upload stage artifact (always)
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: boss-stage-${{ env.STAGE }}
          path: ${{ env.STAGE_ARTIFACT_DIR }}
          retention-days: 7
          overwrite: true
  aggregate:
    name: Aggregate Boss Final
    needs: stage
    permissions:
      actions: read
      contents: read
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      RELEASE_TAG: ${{ github.event_name == 'workflow_dispatch' && inputs.release_tag || '' }}
      REPORT_DIR: ${{ github.workspace }}/.boss-aggregate
      ARTS_DIR: ${{ github.workspace }}/.boss-arts
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install Python 3.11
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get update
          sudo apt-get install -y python3.11 python3.11-venv python3.11-distutils python3.11-dev
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 400
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.11 400
          sudo update-alternatives --set python3 /usr/bin/python3.11
          sudo update-alternatives --set python /usr/bin/python3.11
          python -m ensurepip --upgrade

      - name: Upgrade packaging toolchain
        timeout-minutes: 5
        run: python -m pip install --upgrade pip==24.2 setuptools==75.1.0 wheel==0.44.0

      - name: Install Python dependencies
        timeout-minutes: 5
        run: |
          set -euo pipefail
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.lock -c constraints-app.txt
          python -m pip check

      - name: Download stage artifacts (pattern)
        if: always()
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          pattern: boss-stage-s*
          path: ${{ env.ARTS_DIR }}
          merge-multiple: true

      - name: Aggregate reports (local)
        if: always()
        id: aggregate
        env:
          ARTS_DIR: ${{ env.ARTS_DIR }}
          REPORT_DIR: ${{ env.REPORT_DIR }}
        run: |
          set -euo pipefail
          mkdir -p "$REPORT_DIR"
          . .venv/bin/activate 2>/dev/null || true
          python scripts/boss_final/aggregate_reports_local.py | tee "$REPORT_DIR/aggregate.log"

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: q1-boss-final
          path: ${{ env.REPORT_DIR }}

      - name: Validate report schema (local)
        if: always()
        run: |
          set -euo pipefail
          . .venv/bin/activate 2>/dev/null || true
          python -m jsonschema --instance "$REPORT_DIR/report.json" --schema schemas/q1_boss_report.schema.json

      - name: Evaluate guard status
        if: always()
        id: guard
        run: |
          status=$(cat "$REPORT_DIR/guard_status.txt")
          echo "guard_status=$status" >> "$GITHUB_OUTPUT"
          if [ "$status" != "PASS" ]; then
            exit 1
          fi

      - name: Publish Boss Final summary
        if: always()
        uses: ./.github/actions/github-script
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const fallback = '⚠️ Relatório não encontrado. Veja GITHUB_STEP_SUMMARY para detalhes.';
            const reportDir = process.env.REPORT_DIR || path.join(process.cwd(), 'out', 'q1_boss_final');
            const commentPath = path.join(reportDir, 'pr_comment.md');
            let body = fallback;
            try {
              if (fs.existsSync(commentPath)) {
                body = fs.readFileSync(commentPath, 'utf8');
              }
            } catch (error) {
              core.warning(`Falha ao ler pr_comment.md: ${error.message}`);
            }
            core.summary.addHeading('Q1 Boss Final');
            core.summary.addRaw(body);
            core.summary.addEOL();
            await core.summary.write();
            if (context.eventName === 'pull_request') {
              try {
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body,
                });
              } catch (error) {
                core.warning(`Falha ao comentar no PR: ${error.message}`);
              }
            }

      - name: Enforce aggregate status
        if: ${{ always() && steps.aggregate.outcome == 'failure' }}
        run: exit 1

      - name: Fail when any stage guard failed
        if: ${{ always() && needs.stage.result == 'failure' }}
        run: exit 1
